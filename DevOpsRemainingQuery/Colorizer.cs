namespace DevOpsRemainingQuery
{
    using System.CommandLine.Rendering;

    /// <summary>
    /// Class Colorizer.
    /// </summary>
    /// <autogeneratedoc/>
    internal static class Colorizer
    {
        /// <summary>
        /// Bolds the specified text.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan Bold(this string value) => new ContainerSpan(
                StyleSpan.BoldOn(),
                new ContentSpan(value),
                StyleSpan.BoldOff());

        /// <summary>
        /// Sets the text style to Bold and White.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan BoldWhite(this string value) =>
             new ContainerSpan(
                 ForegroundColorSpan.White(),
                 StyleSpan.BoldOn(),
                 new ContentSpan(value),
                 StyleSpan.BoldOff(),
                 ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to dark grey.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan DarkGrey(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.Rgb(100, 100, 100),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to dark orange.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan DarkOrange(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.Rgb(128, 64, 0),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to light blue.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan LightBlue(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.LightBlue(),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to light green.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan LightGreen(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.LightGreen(),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to light red.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan LightRed(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.LightRed(),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color to orange.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan Orange(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.Rgb(255, 128, 0),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Sets the text color with RGB values.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <param name="r">The r.</param>
        /// <param name="g">The g.</param>
        /// <param name="b">The b.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan Rgb(this string value, byte r, byte g, byte b) =>
            new ContainerSpan(
                ForegroundColorSpan.Rgb(r, g, b),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());

        /// <summary>
        /// Underlines the specified text.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan Underline(this string value) =>
            new ContainerSpan(
                StyleSpan.UnderlinedOn(),
                new ContentSpan(value),
                StyleSpan.UnderlinedOff());

        /// <summary>
        /// Sets the text color to white.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns>TextSpan.</returns>
        public static TextSpan White(this string value) =>
            new ContainerSpan(
                ForegroundColorSpan.White(),
                new ContentSpan(value),
                ForegroundColorSpan.Reset());
    }
}